- name: Get keycloak admin passord
  shell: |
    admin_password=`kubectl get secret --namespace keycloak keycloak -o go-template='{{ '{{' }}index .data "admin-password"|base64decode{{ '}}' }}'`
    echo $admin_password
  register: keycloak_admin_password

# - name: Create or update a Keycloak Client Scope
#   community.general.keycloak_client:

# - name: Create or update a Keycloak client
#   community.general.keycloak_client:
#     auth_client_id: admin-cli
#     auth_keycloak_url: https://keycloak.{{domain}}
#     auth_realm: master
#     auth_username: admin
#     auth_password: "{{keycloak_admin_password.stdout}}"
#     state: present
#     realm: master
#     client_id: "{{openg2p_admin_client_id}}"
#     id: eaac1b96-2bdd-4ca4-a035-bf904f690ad5
#     name: OpenG2P Admin Client
#     description: OpenG2P Admin Client - Openid Connect
#     enabled: true
#     client_authenticator_type: client-secret
#     secret: REALLYWELLKEPTSECRET
#     redirect_uris:
#       - "*"
#     web_origins: []
#     not_before: 0
#     bearer_only: false
#     consent_required: false
#     standard_flow_enabled: true
#     implicit_flow_enabled: false
#     direct_access_grants_enabled: true
#     service_accounts_enabled: false
#     public_client: false
#     frontchannel_logout: true
#     protocol: openid-connect
#     full_scope_allowed: true
#     node_re_registration_timeout: -1
#     always_display_in_console: false
#     surrogate_auth_required: false
#     default_client_scopes:             ### needs review
#       - role_list
#     protocol_mappers:
#       - config:
#           attribute.name: member
#           attribute.nameformat: Basic
#           single: true
#           full.path: true
#         consentRequired: false
#         name: groups
#         protocol: saml
#         protocolMapper: saml-group-membership-mapper
#       - config:
#           attribute.name: urn:oid:1.2.840.113549.1.9.1
#           attribute.nameformat: urn:oasis:names:tc:SAML:2.0:attrname-format:uri
#           friendly.name: email
#           user.attribute: email
#         consentRequired: false
#         name: X500 email
#         protocol: saml
#         protocolMapper: saml-user-property-mapper
#       - config:
#           attribute.name: username
#           attribute.nameformat: Basic
#           friendly.name: username
#           user.attribute: username
#         consentRequired: false
#         name: username
#         protocol: saml
#         protocolMapper: saml-user-property-mapper

#       - config:
#           attribute.name: Role
#           attribute.nameformat: Basic
#           single: false
#         consentRequired: false
#         name: role list
#         protocol: saml
#         protocolMapper: saml-role-list-mapper

#       - config:
#           attribute.name: urn:oid:2.5.4.42
#           attribute.nameformat: urn:oasis:names:tc:SAML:2.0:attrname-format:uri
#           friendly.name: givenName
#           user.attribute: firstName
#         consentRequired: false
#         name: X500 givenName
#         protocol: saml
#         protocolMapper: saml-user-property-mapper

#       - config:
#           attribute.name: urn:oid:2.5.4.4
#           attribute.nameformat: urn:oasis:names:tc:SAML:2.0:attrname-format:uri
#           friendly.name: surname
#           user.attribute: lastName
#         consentRequired: false
#         name: X500 surname
#         protocol: saml
#         protocolMapper: saml-user-property-mapper

#     attributes:
#         oidc.ciba.grant.enabled: "false"
#         client.secret.creation.time: "1704319095"
#         backchannel.logout.session.required: "true"
#         display.on.consent.screen: "false"
#         oauth2.device.authorization.grant.enabled: "false"
#         backchannel.logout.revoke.offline.tokens: "false"
    
