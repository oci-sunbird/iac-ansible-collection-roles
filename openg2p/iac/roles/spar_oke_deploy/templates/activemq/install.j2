#!/bin/bash
## Installs activeMQ
## Usage: ./install.sh [kubeconfig]


if [ $# -ge 1 ] ; then
  export KUBECONFIG=$1
fi

NS=activemq

function create_namespace() {
    if kubectl get namespace $NS &> /dev/null; then
    echo "Namespace $NS exists."
    else
    echo "Namespace $NS does not exist. Creating namespace $NS"
    kubectl create namespace $NS
    fi    
}


function installing_Activemq() {
  echo Updating repos
  helm repo add mosip {{mosip_helm_repo}}
  helm repo update

  echo Installing Activemq
  ACTIVEMQ_HOST=activemq.{{domain}}
  echo Activemq host: $ACTIVEMQ_HOST
  helm -n $NS upgrade --install --atomic activemq mosip/activemq-artemis -f values.yaml --set istio.hosts[0]="$ACTIVEMQ_HOST" --wait
  return 0
}

# set commands for error handling.
set -e
set -o errexit   ## set -e : exit the script if any statement returns a non-true return value
set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
set -o errtrace  # trace ERR through 'time command' and other functions
set -o pipefail  # trace ERR through pipes

echo Create $NS namespace
create_namespace

kubectl label namespace $NS istio-injection=enabled --overwrite

installing_Activemq   # calling function